在Java 9+版本中，接口的内容可以有：

*1. 成员变量其实是常量，格式：
*[public] [static] [final] 数据类型 常量名称 = 数据值;
*注意：
	*常量必须进行赋值，而且一旦赋值不能改变。
	*常量名称完全大写，用下划线进行分隔。

*2. 接口中最重要的就是抽象方法，格式：
*[public] [abstract] 返回值类型 方法名称(参数列表);
*注意：实现类必须覆盖重写接口所有的抽象方法，除非实现类是抽象类。

*3. 从Java 8开始，接口里允许定义默认方法，格式：
*[public] default 返回值类型 方法名称(参数列表) { 方法体 }
*注意：默认方法也可以被覆盖重写

*4. 从Java 8开始，接口里允许定义静态方法，格式：
*[public] static 返回值类型 方法名称(参数列表) { 方法体 }
*注意：应该通过接口名称进行调用，不能通过实现类对象调用接口静态方法

*5. 从Java 9开始，接口里允许定义私有很乏，格式：
*普通私有方法：private 返回值类型 方法名称(参数列表) { 方法体 }
*静态私有方法：private static 返回值类型 方法名称(参数列表) { 方法体 }
*注意：private的方法只有接口自己才能调用，不能被实现类或别人使用。

 使用接口时候，需要注意：
* 1.接口是没有静态代码块或者构造方法的。
* 2.一个类的直接父类是唯一的。但是一个类可以同时实现多个接口
*格式：
* public class myinterfaceimpl implements myinterA,myinterB{
* 覆盖重写所有抽象方法
* }
* 3.如果实现类所实现的多个接口中，存在重复的抽象方法，那么只需要覆盖重写一次即可。
* 4.如果实现类没有覆盖重写所有接口当中的抽象方法，那么实现类就必须是一个抽象类。
* 5.如果实现类所实现的多个接口当中，存在重复的默认方法，那么实现类一定要对冲突的默认方法进行覆盖重写
* 6.一个类如果直接父类当中的方法，和接口当中的默认方法产生了冲突，优先用父类当中的方法。
* 这个接口中有4个方法
* methodA来源于接口A
* methodB来源于接口B
* methodcommon同时来源于接口A和B
* method 来源于我自己
*
* 注意事项：
* 1.多个父接口当中的抽象方法如果重复，没关系
* 2.多个父接口当中的默认方法如果重复，那么子接口必须进行默认方法的覆盖重写，【而且必须带着default关键字】
*